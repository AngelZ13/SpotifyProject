@model IPagedList<Omadiko.Entities.Genre>
@using PagedList;
@using PagedList.Mvc;

@{
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

<!-- Page Content  -->
<div id="content-page" class="content-page">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="iq-card">
                    <div class="iq-card-header d-flex justify-content-between">
                        <div class="iq-header-title">
                            <h4 class="card-title">Genres Lists</h4>
                        </div>
                        <div class="iq-card-header-toolbar d-flex align-items-center">
                            <a href="~/Genres/Create" class="btn btn-primary">Add New Category</a>
                        </div>
                    </div>

                    <div class="iq-card-header d-flex justify-content-end">
                        <div class="iq-search-bar">
                            @using (Html.BeginForm("Index", "Genres", FormMethod.Get, new { @class = "searchbox" }))
                            {
                                <div style="padding-left: 10px">
                                    <b>Search by:</b>
                                    <span style="margin: 0px 10px">
                                        @Html.RadioButton("searchBy", "Kind", true) <text>Genre Kind</text>
                                    </span>
                                </div>
                                @Html.TextBox("search", null, new { @class = "text search-input", style = "width:80%; padding-left:10px; margin-right: 0px; border-top-right-radius: 0px", placeholder = "Search Here...", type = "search" })
                                <button type="submit" title="Search" style="background-color:royalblue"><i class="ri-search-line"></i></button>
                                <button id="ResetButton" title="Reset" style="background-color:forestgreen"><i class="las la-undo-alt"></i></button>
                            }
                        </div>
                    </div>

                    <div class="iq-card-body">
                        <div class="table-responsive">
                            <table class="data-tables table table-striped table-bordered text-center" style="width:100%">
                                <thead>
                                    <tr>
                                        <th width="5%">
                                            @Html.DisplayNameFor(model => model.First().GenreId)
                                        </th>
                                        <th style="width: 15%;">
                                            @Html.ActionLink("Kind", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] })
                                        </th>
                                        <th width="10%">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.Count() == 0)
                                    {
                                        <tr>
                                            <td colspan="4">No match found.</td>
                                        </tr>
                                    }
                                    else
                                    {
                                        foreach (var genre in Model)
                                        {
                                            <tr>
                                                <td>
                                                    @genre.GenreId
                                                </td>
                                                <td>
                                                    @genre.Kind
                                                </td>
                                                <td>
                                                    <div class="flex align-items-center list-user-action">
                                                        <a class="bg-primary" data-toggle="tooltip" data-placement="top" title="" data-original-title="Edit" href="~/Genres/Edit/@genre.GenreId"><i class="ri-pencil-line"></i></a>
                                                        <a class="bg-primary" data-toggle="tooltip" data-placement="top" title="" data-original-title="Delete" href="~/Genres/Delete/@genre.GenreId"><i class="ri-delete-bin-line"></i></a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    </tbody>
                            </table>
                            <div class="pagination" style="justify-content:center">
                                <p>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>
                            </div>
                            <div class="pagination" style="justify-content:center">
                                @Html.PagedListPager(Model, page => Url.Action("Index",
                            new{page,searchBy = Request.QueryString["searchBy"],search = Request.QueryString["search"],
                            sortBy = Request.QueryString["sortBy"]}), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section MyCustomJavascript{
    <script>
        $("#ResetButton").click(function (e) {
            $("#search").val("");
        });
    </script>
}